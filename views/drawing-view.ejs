<html lang="en">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <%- include('./partials/header.ejs') %>
    <%- include('./partials/navigate.ejs') %>

    <body>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">


            <div class="site-title"></div>
            <h7>
                <%=currWord%>
            </h7>
            <br>

            <form id="drawing" action="/waiting-view" method="POST">
                <input type="hidden" name="imgBase64" id="imgBase64"> 
                <input type="hidden" name="name" value=<%=name%>>
                <input type="hidden" name="role" value=<%=role%>>

                <canvas id="canvas" style="border: 2px solid black" width="500" height="550"></canvas>
                <br>
                <button type="submit"> <strong>Submit draw</strong></button>
            </form>

            <button id="clear-button"  style="left: 80px" onclick="clear()"> Clear</button> <br>    

            <%- include('./partials/footer.ejs') %>

            <script>
                const clearButton = document.getElementById('clear-button');
                const canvas = document.getElementById('canvas');
                var dataURL = canvas.toDataURL();
                document.getElementById("imgBase64").value = dataURL; // for sending to the server.
                const ctx = canvas.getContext('2d');
                // ctx.font = "20px Comic Sans MS";
                ctx.textAlign = "center";
                ctx.fillStyle = "red";
                // Set up canvas
                // ctx.lineWidth = 3;
                // ctx.lineCap = 'round';  
                window.addEventListener('resize', resizeCanvas, false);
          window.addEventListener('orientationchange', resizeCanvas, false);
          resizeCanvas();
        
      
 
      function resizeCanvas() {
        canvas.width = window.innerWidth * 0.40;
        canvas.height = window.innerHeight * 0.50;
        
      }

                // Set up mouse event listeners
                let isDrawing = false;
                let lastX = 0;
                let lastY = 0;

                function draw(e) {
                    if (!isDrawing) return;
                    ctx.beginPath();
                    ctx.moveTo(lastX, lastY);
                    ctx.lineTo(e.offsetX, e.offsetY);
                    ctx.stroke();
                    [lastX, lastY] = [e.offsetX, e.offsetY];
                }

                canvas.addEventListener('mousemove', draw);
                canvas.addEventListener('mousedown', (e) => {
                    isDrawing = true;
                    [lastX, lastY] = [e.offsetX, e.offsetY];
                });
                canvas.addEventListener('mouseup', () => (isDrawing = false));
                canvas.addEventListener('mouseout', () => (isDrawing = false));


                clearButton.addEventListener('click', () => {
                    ctx.clearRect(0, 0, canvas.width, canvas.height);
                });


                    canvas.addEventListener('touchstart', function (event) {
                        if (event.target === canvas){
                        isDrawing = true;
                        ctx.moveTo(event.touches[0].clientX, event.touches[0].clientY);
                        event.preventDefault();
                    }},{ passive: true });


                    canvas.addEventListener('touchmove', function (event) {
                        if (event.target === canvas && isDrawing) {  
                            ctx.lineTo(event.touches[0].clientX, event.touches[0].clientY);
                            ctx.stroke();
                            event.preventDefault();
                            
                        }
                    },{ passive: true });

                    canvas.addEventListener('touchend', function () {
                        if (event.target === canvas) {
                        isDrawing = false;
                        event.preventDefault();
                        }
                    });

                    canvas.addEventListener('touchcancel', function () {
                        if (event.target === canvas) {
                        isDrawing = false;
                        event.preventDefault();
                        }
                    });
            </script>

            </div>

    </body>

</html>